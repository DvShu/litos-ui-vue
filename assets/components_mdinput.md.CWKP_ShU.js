import{x as u}from"./chunks/theme.CSHym8GW.js";import{p as m,B as p,c as h,o as b,at as s,G as e,j as d,w as o,k as c,a as n}from"./chunks/framework.BSvSrwQ3.js";const g=JSON.parse('{"title":"MdInput","description":"","frontmatter":{},"headers":[],"relativePath":"components/mdinput.md","filePath":"components/mdinput.md","lastUpdated":1760171877000}'),_={name:"components/mdinput.md"},q=Object.assign(_,{setup(v){const a=m("");return(f,t)=>{const r=p("CodePreview"),i=p("ClientOnly");return b(),h("div",null,[t[4]||(t[4]=s('<h1 id="mdinput" tabindex="-1">MdInput <a class="header-anchor" href="#mdinput" aria-label="Permalink to &quot;MdInput&quot;">​</a></h1><p><code>Material Design</code> 风格的输入框; <code>Material Design</code> 是由 <code>Google</code> 设计的视觉语言。</p><blockquote><p>组件使用名称为: <code>lv-md-input</code></p></blockquote><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>传递 <code>v-model</code> 接收输入。</p>',6)),e(i,null,{default:o(()=>[e(r,null,{preview:o(()=>[e(c(u),{modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=l=>a.value=l),label:"姓名"},null,8,["modelValue"])]),default:o(()=>[t[2]||(t[2]=d("textarea",{lang:"vue"},`  <script setup lang="ts">
    import { ref, watch } from 'vue'
    //-
    const value = ref('')
  <\/script>
  <template>
    <lv-md-input v-model="value" label="姓名"></lv-md-input>
  </template>
  `,-1))]),_:1})]),_:1}),t[5]||(t[5]=d("h3",{id:"四周边框",tabindex:"-1"},[n("四周边框 "),d("a",{class:"header-anchor",href:"#四周边框","aria-label":'Permalink to "四周边框"'},"​")],-1)),t[6]||(t[6]=d("p",null,[n("只需要传递 "),d("code",null,"outline"),n(" 属性，就能让输入框带有边框。")],-1)),e(i,null,{default:o(()=>[e(r,null,{preview:o(()=>[e(c(u),{modelValue:a.value,"onUpdate:modelValue":t[1]||(t[1]=l=>a.value=l),label:"姓名",outline:""},null,8,["modelValue"])]),default:o(()=>[t[3]||(t[3]=d("textarea",{lang:"vue-html"},`  <lv-md-input v-model="value" label="姓名" outline></lv-md-input>
  `,-1))]),_:1})]),_:1}),t[7]||(t[7]=s('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="mdinput-props" tabindex="-1">MdInput Props <a class="header-anchor" href="#mdinput-props" aria-label="Permalink to &quot;MdInput Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>outline</code></td><td>是否显示四周边框</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>id</code></td><td>输入框的 id</td><td><code>string</code></td><td>-</td></tr><tr><td><code>label</code></td><td>输入框的标签</td><td><code>string</code></td><td>-</td></tr><tr><td><code>placeholder</code></td><td>输入框的占位提示</td><td><code>string</code></td><td>-</td></tr><tr><td><code>name</code></td><td>输入框的 name</td><td><code>string</code></td><td>-</td></tr><tr><td><code>html-type</code></td><td>对应输入框的原生属性 <code>type</code></td><td><code>string</code></td><td><code>text</code></td></tr><tr><td><code>v-model</code></td><td>双向绑定的值</td><td><code>string | number</code></td><td>-</td></tr></tbody></table><h3 id="mdinput-expose" tabindex="-1">MdInput Expose <a class="header-anchor" href="#mdinput-expose" aria-label="Permalink to &quot;MdInput Expose&quot;">​</a></h3><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td><code>focus</code></td><td>聚焦输入框</td><td>-</td><td>-</td></tr></tbody></table>',5))])}}});export{g as __pageData,q as default};

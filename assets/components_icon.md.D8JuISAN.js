const __vite__fileDeps=["assets/chunks/theme.DG1s64Hz.js","assets/chunks/framework.B0dyP2Dw.js","assets/chunks/Sort.CfytXanz.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{d as b,e as P,j as v,p as I,o as p,a as _,w as m,q as D,b as d,l as x,n as C,s as T,t as A,v as w,T as O,x as g,h as V,a4 as L,c as f,F as R,S,_ as i,k as u,aa as E,R as y}from"./chunks/framework.B0dyP2Dw.js";import{j as F,k as q,l as B,m as $,s as N}from"./chunks/theme.DG1s64Hz.js";function z(s){const n=document.createElement("textarea");return n.style.border="0",n.style.padding="0",n.style.margin="0",n.style.position="absolute",n.style.left="-9999px",n.style.top="-9999",n.setAttribute("readonly",""),n.value=s,n}function j(s){const n=z(s);document.body.append(n),n.focus(),n.select();const t=document.execCommand("copy");return n.remove(),Promise.resolve(t)}function H(s){const n=navigator.clipboard;return n!=null?n.writeText(s).then(()=>{Promise.resolve(!0)}).catch(()=>Promise.resolve(!1)):Promise.resolve(!1)}function M(s){let n=null,t=null;if(typeof s=="string"&&(s.startsWith("#")||s.startsWith(".")?(t=document.querySelector(s),t==null&&(n=s)):n=s),s instanceof HTMLElement&&(t=s),t!=null)if(t.hasAttribute("data-copy-text"))n=t.getAttribute("data-copy-text");else{const o=t.tagName;o==="INPUT"||o==="TEXTAREA"?n=t.value:n=t.textContent}return n}async function W(s){const n=M(s);return n==null?Promise.resolve(!1):await H(n)===!1?j(n):Promise.resolve(!0)}const U=["id"],Z={class:"nt-message-content"},G=b({__name:"index",props:{onClose:{},duration:{default:3e3},type:{default:"info"},customClass:{default:""},zindex:{default:1e3},offset:{default:20},message:{},id:{},width:{default:""}},emits:["destroy"],setup(s,{expose:n}){const t=s,o=P(!1),e=v(()=>({top:`${t.offset}px`,zIndex:t.zindex,width:t.width===""?void 0:t.width})),a=v(()=>t.type==="success"?F:t.type==="warn"?q:t.type==="error"?B:$);function l(){o.value=!1}return n({close:l}),I(()=>{o.value=!0,t.duration>0&&setTimeout(()=>{o.value=!1},t.duration)}),(r,k)=>(p(),_(O,{name:"nt-message-fade",appear:"",onBeforeLeave:r.onClose,onAfterLeave:k[0]||(k[0]=le=>r.$emit("destroy"))},{default:m(()=>[D(d("div",{id:r.id,style:x(e.value),class:C(["nt-message",`nt-message-${r.type}`,r.customClass])},[d("div",null,[(p(),_(T(a.value),{class:"nt-message-icon"})),d("span",Z,A(r.message),1)])],14,U),[[w,o.value]])]),_:1},8,["onBeforeLeave"]))}}),J=["info","success","error","warn","show"],c=[];let K=0;function Q(s){const n=c.findIndex(a=>a.component!=null&&a.component.props.id===s);if(n===-1)return;const t=c.splice(n,1)[0];if(t==null)return;let o=15;t.el!=null&&(o=t.el.offsetHeight);const e=c.length;if(e!==0)for(let a=n;a<e;a++){const l=c[a];if(l.el!=null&&l.component!=null){const r=parseInt(l.el.style.top,10)-o-15;l.component.props.offset=r}}}const h=s=>{let n=document.createElement("div"),t=15;for(const l of c)l.el!=null&&(t+=l.el.offsetHeight+15);const o=`message${++K}`,e=typeof s=="string"?{message:s}:s;e.id=o,e.offset=t,e.onClose=()=>{Q(o)},e.onDestroy=()=>{g(null,n),n=null};const a=V(G,e);return g(a,n),c.push(a),document.body.appendChild(n.firstElementChild),o};for(const s of J)h[s]=n=>{const t=typeof n=="string"?{message:n}:n;return t.type=s,t.type==="show"&&(t.type="info"),h(t)};h.close=s=>{const n=c.find(t=>t.component!=null&&t.component.props.id===s);n!=null&&n.component.exposed.close()};const X={class:"icon-list"},Y=["onClick"],ee={class:"icon-name"},ne=b({__name:"IconList",setup(s){const n=Object.assign({"../components/icon/ArrowDown.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.K),__vite__mapDeps([0,1])),"../components/icon/ArrowLeft.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.G),__vite__mapDeps([0,1])),"../components/icon/ArrowRight.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.H),__vite__mapDeps([0,1])),"../components/icon/ArrowUp.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.J),__vite__mapDeps([0,1])),"../components/icon/Base.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.B),__vite__mapDeps([0,1])),"../components/icon/CaretBottom.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.F),__vite__mapDeps([0,1])),"../components/icon/CaretTop.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.E),__vite__mapDeps([0,1])),"../components/icon/Close.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.N),__vite__mapDeps([0,1])),"../components/icon/IconFont.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.I),__vite__mapDeps([0,1])),"../components/icon/Info.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.C),__vite__mapDeps([0,1])),"../components/icon/Loading.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.L),__vite__mapDeps([0,1])),"../components/icon/MaskClose.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.A),__vite__mapDeps([0,1])),"../components/icon/Reduction.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.T),__vite__mapDeps([0,1])),"../components/icon/RefreshLeft.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.P),__vite__mapDeps([0,1])),"../components/icon/RefreshRight.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.Q),__vite__mapDeps([0,1])),"../components/icon/Search.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.S),__vite__mapDeps([0,1])),"../components/icon/Sort.vue":()=>i(()=>import("./chunks/Sort.CfytXanz.js"),__vite__mapDeps([2,0,1])),"../components/icon/Success.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.D),__vite__mapDeps([0,1])),"../components/icon/Warn.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.W),__vite__mapDeps([0,1])),"../components/icon/ZoomIn.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.Z),__vite__mapDeps([0,1])),"../components/icon/ZoomOut.vue":()=>i(()=>import("./chunks/theme.DG1s64Hz.js").then(e=>e.O),__vite__mapDeps([0,1]))}),t=[];for(const e in n)if(Object.hasOwn(n,e)){let a=e.substring(e.lastIndexOf("/")+1,e.lastIndexOf("."));a!=="IconFont"&&a!=="Base"&&(a=N(a),a!==""&&a!==""&&t.push({name:a,component:L(n[e])}))}async function o(e){await W(`<nt-${e}-icon />`),h.success("复制成功")}return(e,a)=>(p(),f("div",X,[(p(),f(R,null,S(t,l=>d("div",{key:l.name,class:"icon-item center",onClick:r=>o(l.name)},[(p(),_(T(l.component),{class:C({"nt-rotate-anim":l.name.includes("loading")})},null,8,["class"])),d("span",ee,A(l.name),1)],8,Y)),64))]))}}),te=E(`<h1 id="icon-图标" tabindex="-1">Icon 图标 <a class="header-anchor" href="#icon-图标" aria-label="Permalink to &quot;Icon 图标&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>推荐使用 <a href="https://icon-sets.iconify.design/" target="_blank" rel="noreferrer">iconify字体图标库</a>，里面包含有很多平台资源，并且都是按需加载的。</p><p>由于框架有的组件需要用到图标，所以框架也会内置一些图标库</p><h3 id="内置图标" tabindex="-1">内置图标 <a class="header-anchor" href="#内置图标" aria-label="Permalink to &quot;内置图标&quot;">​</a></h3><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-search-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-error-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-loading-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// ......</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>框架内置的图标如下：</p>`,7),se=E('<h3 id="使用-iconfont-图标" tabindex="-1">使用 <code>iconfont</code> 图标 <a class="header-anchor" href="#使用-iconfont-图标" aria-label="Permalink to &quot;使用 `iconfont` 图标&quot;">​</a></h3><p>使用时需要单独引入 <code>iconfont</code> 图标文件。</p><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-font-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Search&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>name</code> 属性填入引入的 <code>iconfont</code> 文件里面对应的 <code>id</code> 即可</p><h3 id="颜色和尺寸" tabindex="-1">颜色和尺寸 <a class="header-anchor" href="#颜色和尺寸" aria-label="Permalink to &quot;颜色和尺寸&quot;">​</a></h3><p>修改颜色和尺寸可以通过 <code>color</code> 和 <code>font-size</code> 修改</p><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-search-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color:red;font-size:16px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果不想直接修改 <code>style</code>，也能通过 <a href="https://tailwindui.com/" target="_blank" rel="noreferrer">Tailwind CSS</a> 或者 <a href="https://unocss.dev/" target="_blank" rel="noreferrer">unocss</a>，然后直接添加 <code>class</code></p><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-search-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-sm text-blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="自定义图标" tabindex="-1">自定义图标 <a class="header-anchor" href="#自定义图标" aria-label="Permalink to &quot;自定义图标&quot;">​</a></h3><p>可以通过使用 <code>base-icon</code> 然后加入自定义的 <code>svg-path</code> 路径来构建自定义的图标</p>',11),ie=d("textarea",{lang:"vue-html"},`
<nt-base-icon>
<path
      d="M512 42.666667A464.64 464.64 0 0 0 42.666667 502.186667 460.373333 460.373333 0 0 0 363.52 938.666667c23.466667 4.266667 32-9.813333 32-22.186667v-78.08c-130.56 27.733333-158.293333-61.44-158.293333-61.44a122.026667 122.026667 0 0 0-52.053334-67.413333c-42.666667-28.16 3.413333-27.733333 3.413334-27.733334a98.56 98.56 0 0 1 71.68 47.36 101.12 101.12 0 0 0 136.533333 37.973334 99.413333 99.413333 0 0 1 29.866667-61.44c-104.106667-11.52-213.333333-50.773333-213.333334-226.986667a177.066667 177.066667 0 0 1 47.36-124.16 161.28 161.28 0 0 1 4.693334-121.173333s39.68-12.373333 128 46.933333a455.68 455.68 0 0 1 234.666666 0c89.6-59.306667 128-46.933333 128-46.933333a161.28 161.28 0 0 1 4.693334 121.173333A177.066667 177.066667 0 0 1 810.666667 477.866667c0 176.64-110.08 215.466667-213.333334 226.986666a106.666667 106.666667 0 0 1 32 85.333334v125.866666c0 14.933333 8.533333 26.88 32 22.186667A460.8 460.8 0 0 0 981.333333 502.186667 464.64 464.64 0 0 0 512 42.666667"
      fill="#231F20"
    ></path>
</nt-base-icon>
`,-1),ae=E('<p>当然自定义图标，也可以使用 <a href="https://github.com/unplugin/unplugin-icons?tab=readme-ov-file#custom-icons" target="_blank" rel="noreferrer">unplugin-icons</a> 实现</p><h3 id="使用其它图标库" tabindex="-1">使用其它图标库 <a class="header-anchor" href="#使用其它图标库" aria-label="Permalink to &quot;使用其它图标库&quot;">​</a></h3><p>本身提供的图标数量有限，如果不能满足需求，可以考虑使用通用性更强、数量更多的图标库。</p><ul><li>推荐图标格式：<code>SVG</code></li><li>推荐图标库：<a href="https://iconify.design/" target="_blank" rel="noreferrer">iconify</a> 它提供了超过 200000 个开源图标。</li><li>两种方式可以使用 <code>iconify</code>: <a href="https://www.npmjs.com/package/@iconify/vue" target="_blank" rel="noreferrer">@iconify/vue</a> 和 <a href="https://github.com/unplugin/unplugin-icons" target="_blank" rel="noreferrer">unplugin-icons</a></li><li>推荐使用 <a href="https://github.com/unplugin/unplugin-icons" target="_blank" rel="noreferrer">unplugin-icons</a> 既能离线加载，也能自定义图标</li></ul>',4),pe=JSON.parse('{"title":"Icon 图标","description":"","frontmatter":{},"headers":[],"relativePath":"components/icon.md","filePath":"components/icon.md","lastUpdated":1713346936000}'),oe={name:"components/icon.md"},de=Object.assign(oe,{setup(s){return(n,t)=>{const o=y("CodePreview"),e=y("ClientOnly");return p(),f("div",null,[te,u(ne),se,u(e,null,{default:m(()=>[u(o,null,{default:m(()=>[ie]),_:1})]),_:1}),ae])}}});export{pe as __pageData,de as default};

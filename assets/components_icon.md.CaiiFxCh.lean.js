const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/theme.D9bEuVpp.js","assets/chunks/framework.BMugtFyW.js"])))=>i.map(i=>d[i]);
import{d as _,a9 as E,o as l,c as h,F as k,B as v,b as d,a as g,n as f,K as b,j as y,N as t,af as c,l as p,w as u,$ as m}from"./chunks/framework.BMugtFyW.js";import{s as A,M as P}from"./chunks/theme.D9bEuVpp.js";function D(a){const n=document.createElement("textarea");return n.style.border="0",n.style.padding="0",n.style.margin="0",n.style.position="absolute",n.style.left="-9999px",n.style.top="-9999",n.setAttribute("readonly",""),n.value=a,n}function C(a){const n=D(a);document.body.append(n),n.focus(),n.select();const i=document.execCommand("copy");return n.remove(),Promise.resolve(i)}function I(a){const n=navigator.clipboard;return n!=null?n.writeText(a).then(()=>{Promise.resolve(!0)}).catch(()=>Promise.resolve(!1)):Promise.resolve(!1)}function T(a){let n=null,i=null;if(typeof a=="string"&&(a.startsWith("#")||a.startsWith(".")?(i=document.querySelector(a),i==null&&(n=a)):n=a),a instanceof HTMLElement&&(i=a),i!=null)if(i.hasAttribute("data-copy-text"))n=i.getAttribute("data-copy-text");else{const o=i.tagName;o==="INPUT"||o==="TEXTAREA"?n=i.value:n=i.textContent}return n}async function O(a){const n=T(a);return n==null?Promise.resolve(!1):await I(n)===!1?C(n):Promise.resolve(!0)}const L={class:"icon-list"},R=["onClick"],x={class:"icon-name"},V=_({__name:"IconList",setup(a){const n=Object.assign({"../components/icon/ArrowDown.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ai),__vite__mapDeps([0,1])),"../components/icon/ArrowLeft.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.af),__vite__mapDeps([0,1])),"../components/icon/ArrowRight.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ag),__vite__mapDeps([0,1])),"../components/icon/ArrowUp.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ah),__vite__mapDeps([0,1])),"../components/icon/Base.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.a6),__vite__mapDeps([0,1])),"../components/icon/CaretBottom.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ae),__vite__mapDeps([0,1])),"../components/icon/CaretTop.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ad),__vite__mapDeps([0,1])),"../components/icon/Close.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.an),__vite__mapDeps([0,1])),"../components/icon/DArrowLeft.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ap),__vite__mapDeps([0,1])),"../components/icon/DArrowRight.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.aq),__vite__mapDeps([0,1])),"../components/icon/IconFont.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.au),__vite__mapDeps([0,1])),"../components/icon/Info.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.aa),__vite__mapDeps([0,1])),"../components/icon/Loading.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.a9),__vite__mapDeps([0,1])),"../components/icon/MaskClose.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.a7),__vite__mapDeps([0,1])),"../components/icon/Moon.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.as),__vite__mapDeps([0,1])),"../components/icon/More.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ao),__vite__mapDeps([0,1])),"../components/icon/Reduction.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.aj),__vite__mapDeps([0,1])),"../components/icon/RefreshLeft.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ak),__vite__mapDeps([0,1])),"../components/icon/RefreshRight.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.al),__vite__mapDeps([0,1])),"../components/icon/Search.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.a8),__vite__mapDeps([0,1])),"../components/icon/Sort.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.am),__vite__mapDeps([0,1])),"../components/icon/Success.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ac),__vite__mapDeps([0,1])),"../components/icon/Sun.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ar),__vite__mapDeps([0,1])),"../components/icon/ThemeDefault.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.at),__vite__mapDeps([0,1])),"../components/icon/Warn.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.ab),__vite__mapDeps([0,1])),"../components/icon/ZoomIn.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.av),__vite__mapDeps([0,1])),"../components/icon/ZoomOut.vue":()=>t(()=>import("./chunks/theme.D9bEuVpp.js").then(e=>e.aw),__vite__mapDeps([0,1]))}),i=[];for(const e in n)if(Object.hasOwn(n,e)){let s=e.substring(e.lastIndexOf("/")+1,e.lastIndexOf("."));s!=="IconFont"&&s!=="Base"&&(s=A(s),s!==""&&s!==""&&i.push({name:s,component:E(n[e])}))}async function o(e){await O(`<nt-${e}-icon />`),P.success("复制成功")}return(e,s)=>(l(),h("div",L,[(l(),h(k,null,v(i,r=>d("div",{key:r.name,class:"icon-item center",onClick:F=>o(r.name)},[(l(),g(b(r.component),{class:f({"nt-rotate-anim":r.name.includes("loading")})},null,8,["class"])),d("span",x,y(r.name),1)],8,R)),64))]))}}),S=JSON.parse('{"title":"Icon 图标","description":"","frontmatter":{},"headers":[],"relativePath":"components/icon.md","filePath":"components/icon.md","lastUpdated":1713346936000}'),w={name:"components/icon.md"},N=Object.assign(w,{setup(a){return(n,i)=>{const o=m("CodePreview"),e=m("ClientOnly");return l(),h("div",null,[i[1]||(i[1]=c(`<h1 id="icon-图标" tabindex="-1">Icon 图标 <a class="header-anchor" href="#icon-图标" aria-label="Permalink to &quot;Icon 图标&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>推荐使用 <a href="https://icon-sets.iconify.design/" target="_blank" rel="noreferrer">iconify字体图标库</a>，里面包含有很多平台资源，并且都是按需加载的。</p><p>由于框架有的组件需要用到图标，所以框架也会内置一些图标库</p><h3 id="内置图标" tabindex="-1">内置图标 <a class="header-anchor" href="#内置图标" aria-label="Permalink to &quot;内置图标&quot;">​</a></h3><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-search-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-error-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-loading-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// ......</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>框架内置的图标如下：</p>`,7)),p(V),i[2]||(i[2]=c('<h3 id="使用-iconfont-图标" tabindex="-1">使用 <code>iconfont</code> 图标 <a class="header-anchor" href="#使用-iconfont-图标" aria-label="Permalink to &quot;使用 `iconfont` 图标&quot;">​</a></h3><p>使用时需要单独引入 <code>iconfont</code> 图标文件。</p><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-font-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Search&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>name</code> 属性填入引入的 <code>iconfont</code> 文件里面对应的 <code>id</code> 即可</p><h3 id="颜色和尺寸" tabindex="-1">颜色和尺寸 <a class="header-anchor" href="#颜色和尺寸" aria-label="Permalink to &quot;颜色和尺寸&quot;">​</a></h3><p>修改颜色和尺寸可以通过 <code>color</code> 和 <code>font-size</code> 修改</p><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-search-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color:red;font-size:16px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果不想直接修改 <code>style</code>，也能通过 <a href="https://tailwindui.com/" target="_blank" rel="noreferrer">Tailwind CSS</a> 或者 <a href="https://unocss.dev/" target="_blank" rel="noreferrer">unocss</a>，然后直接添加 <code>class</code></p><div class="language-template vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nt-search-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-sm text-blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="自定义图标" tabindex="-1">自定义图标 <a class="header-anchor" href="#自定义图标" aria-label="Permalink to &quot;自定义图标&quot;">​</a></h3><p>可以通过使用 <code>base-icon</code> 然后加入自定义的 <code>svg-path</code> 路径来构建自定义的图标</p>',11)),p(e,null,{default:u(()=>[p(o,null,{default:u(()=>i[0]||(i[0]=[d("textarea",{lang:"vue-html"},`<nt-base-icon>
<path
      d="M512 42.666667A464.64 464.64 0 0 0 42.666667 502.186667 460.373333 460.373333 0 0 0 363.52 938.666667c23.466667 4.266667 32-9.813333 32-22.186667v-78.08c-130.56 27.733333-158.293333-61.44-158.293333-61.44a122.026667 122.026667 0 0 0-52.053334-67.413333c-42.666667-28.16 3.413333-27.733333 3.413334-27.733334a98.56 98.56 0 0 1 71.68 47.36 101.12 101.12 0 0 0 136.533333 37.973334 99.413333 99.413333 0 0 1 29.866667-61.44c-104.106667-11.52-213.333333-50.773333-213.333334-226.986667a177.066667 177.066667 0 0 1 47.36-124.16 161.28 161.28 0 0 1 4.693334-121.173333s39.68-12.373333 128 46.933333a455.68 455.68 0 0 1 234.666666 0c89.6-59.306667 128-46.933333 128-46.933333a161.28 161.28 0 0 1 4.693334 121.173333A177.066667 177.066667 0 0 1 810.666667 477.866667c0 176.64-110.08 215.466667-213.333334 226.986666a106.666667 106.666667 0 0 1 32 85.333334v125.866666c0 14.933333 8.533333 26.88 32 22.186667A460.8 460.8 0 0 0 981.333333 502.186667 464.64 464.64 0 0 0 512 42.666667"
      fill="#231F20"
    ></path>
</nt-base-icon>
`,-1)])),_:1})]),_:1}),i[3]||(i[3]=c('<p>当然自定义图标，也可以使用 <a href="https://github.com/unplugin/unplugin-icons?tab=readme-ov-file#custom-icons" target="_blank" rel="noreferrer">unplugin-icons</a> 实现</p><h3 id="使用其它图标库" tabindex="-1">使用其它图标库 <a class="header-anchor" href="#使用其它图标库" aria-label="Permalink to &quot;使用其它图标库&quot;">​</a></h3><p>本身提供的图标数量有限，如果不能满足需求，可以考虑使用通用性更强、数量更多的图标库。</p><ul><li>推荐图标格式：<code>SVG</code></li><li>推荐图标库：<a href="https://iconify.design/" target="_blank" rel="noreferrer">iconify</a> 它提供了超过 200000 个开源图标。</li><li>两种方式可以使用 <code>iconify</code>: <a href="https://www.npmjs.com/package/@iconify/vue" target="_blank" rel="noreferrer">@iconify/vue</a> 和 <a href="https://github.com/unplugin/unplugin-icons" target="_blank" rel="noreferrer">unplugin-icons</a></li><li>推荐使用 <a href="https://github.com/unplugin/unplugin-icons" target="_blank" rel="noreferrer">unplugin-icons</a> 既能离线加载，也能自定义图标</li></ul>',4))])}}});export{S as __pageData,N as default};

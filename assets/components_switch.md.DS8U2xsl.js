import{q as r}from"./chunks/theme.B1Inpkem.js";import{e as _,c as p,l as e,w as a,ab as u,b as t,z as c,U as s,o as m,A as i}from"./chunks/framework.CsJhXCE_.js";const b=u('<h1 id="switch-开关" tabindex="-1">Switch 开关 <a class="header-anchor" href="#switch-开关" aria-label="Permalink to &quot;Switch 开关&quot;">​</a></h1><p>表示两种相互对立的状态间的切换，多用于触发「开/关」。</p><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>绑定 <code>v-model</code> 到一个 <code>boolean</code> 类型的变量。可以使用 <code>true</code> 和 <code>false</code> 分别表示开和关。</p>',5),w=t("textarea",{lang:"vue"},`
  <script setup>
    import { ref } from 'vue';
    const open = ref(true);
  <\/script>
  <template>
    <nt-switch v-model="open"></nt-switch>
  </template>
  `,-1),f=t("h3",{id:"文字描述",tabindex:"-1"},[c("文字描述 "),t("a",{class:"header-anchor",href:"#文字描述","aria-label":'Permalink to "文字描述"'},"​")],-1),x=t("p",null,[c("使用 "),t("code",null,"checked-text"),c(" 和 "),t("code",null,"unchecked-text"),c(" 属性来设置开关的文字描述。")],-1),v=t("textarea",{lang:"vue"},`
  <template>
    <nt-switch v-model="open" checked-text="Y" unchecked-text="N"></nt-switch>
  </template>
  `,-1),S=u('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="switch-props" tabindex="-1">Switch Props <a class="header-anchor" href="#switch-props" aria-label="Permalink to &quot;Switch Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>v-model</code></td><td>开关状态(是否打开)</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>checked-text</code></td><td>开启时的文字描述</td><td><code>string</code></td><td>-</td></tr><tr><td><code>unchecked-text</code></td><td>关闭时的文字描述</td><td><code>string</code></td><td>-</td></tr></tbody></table><h3 id="switch-events" tabindex="-1">Switch Events <a class="header-anchor" href="#switch-events" aria-label="Permalink to &quot;Switch Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>change</code></td><td>开关状态改变时触发</td><td><code>(checked: boolean)</code></td></tr></tbody></table><h3 id="switch-css-variables" tabindex="-1">Switch CSS Variables <a class="header-anchor" href="#switch-css-variables" aria-label="Permalink to &quot;Switch CSS Variables&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>--nt-switch-height</code></td><td><code>20px</code></td><td>开关按钮高度</td></tr><tr><td><code>--nt-switch-width</code></td><td><code>var(--nt-switch-height) * 2</code></td><td>开关按钮宽度</td></tr></tbody></table>',7),C=JSON.parse('{"title":"Switch 开关","description":"","frontmatter":{},"headers":[],"relativePath":"components/switch.md","filePath":"components/switch.md","lastUpdated":1716430006000}'),P={name:"components/switch.md"},g=Object.assign(P,{setup(k){const d=_(!0);return(V,o)=>{const h=s("CodePreview"),l=s("ClientOnly");return m(),p("div",null,[b,e(l,null,{default:a(()=>[e(h,null,{preview:a(()=>[e(i(r),{modelValue:d.value,"onUpdate:modelValue":o[0]||(o[0]=n=>d.value=n)},null,8,["modelValue"])]),default:a(()=>[w]),_:1})]),_:1}),f,x,e(l,null,{default:a(()=>[e(h,null,{preview:a(()=>[e(i(r),{modelValue:d.value,"onUpdate:modelValue":o[1]||(o[1]=n=>d.value=n),"checked-text":"Y","unchecked-text":"N"},null,8,["modelValue"])]),default:a(()=>[v]),_:1})]),_:1}),S])}}});export{C as __pageData,g as default};

import{_ as l,c as s,l as d,w as o,ab as n,b as e,z as t,S as c,o as i}from"./chunks/framework.RALdISJs.js";const v=JSON.parse('{"title":"Qrcode 二维码","description":"","frontmatter":{},"headers":[],"relativePath":"components/qrcode.md","filePath":"components/qrcode.md","lastUpdated":1713346936000}'),_={name:"components/qrcode.md"},h=n('<h1 id="qrcode-二维码" tabindex="-1">Qrcode 二维码 <a class="header-anchor" href="#qrcode-二维码" aria-label="Permalink to &quot;Qrcode 二维码&quot;">​</a></h1><p>生成二维码</p><h2 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h2><p>底层的二维码的渲染是使用 <a href="https://www.npmjs.com/package/qrcode-generator-es" target="_blank" rel="noreferrer">qrcode-generator-es</a> 进行渲染</p><h3 id="简单二维码" tabindex="-1">简单二维码 <a class="header-anchor" href="#简单二维码" aria-label="Permalink to &quot;简单二维码&quot;">​</a></h3><p><code>text</code> 属性为二维码内容</p>',6),p=e("textarea",{lang:"vue-html"},`
<nt-qrcode text="Hello World"></nt-qrcode>
`,-1),u=e("h3",{id:"颜色以及大小",tabindex:"-1"},[t("颜色以及大小 "),e("a",{class:"header-anchor",href:"#颜色以及大小","aria-label":'Permalink to "颜色以及大小"'},"​")],-1),m=e("p",null,[t("可以通过 "),e("code",null,"fill"),t(" 属性更改二维码颜色, "),e("code",null,"size"),t(" 属性更改大小; 注意: 实际的二维码的大小不一定跟传递的 "),e("code",null,"size"),t(" 一样大，因为会调整每一个二维码小单元格尺寸, 所以最终大小只能是小于等于传递的 "),e("code",null,"size")],-1),f=e("textarea",{lang:"vue-html"},`
<nt-qrcode text="Hello World" fill="#4998f4" size="120"></nt-qrcode>
`,-1),q=n('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="qrcode-props" tabindex="-1">Qrcode Props <a class="header-anchor" href="#qrcode-props" aria-label="Permalink to &quot;Qrcode Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>text</code></td><td>二维码内容</td><td><code>string</code></td><td>—</td></tr><tr><td><code>fill</code></td><td>二维码颜色</td><td><code>string</code></td><td><code>#000000</code></td></tr><tr><td><code>size</code></td><td>二维码大小</td><td><code>string</code></td><td><code>100</code></td></tr><tr><td><code>level</code></td><td>二维码容错率, <code>L</code>、<code>M</code>、<code>Q</code>、<code>H</code></td><td><code>string</code></td><td><code>L</code></td></tr><tr><td><code>margin</code></td><td>二维码边距</td><td><code>number</code></td><td><code>0</code></td></tr></tbody></table>',3);function b(x,P,T,g,k,C){const a=c("CodePreview"),r=c("ClientOnly");return i(),s("div",null,[h,d(r,null,{default:o(()=>[d(a,null,{default:o(()=>[p]),_:1})]),_:1}),u,m,d(r,null,{default:o(()=>[d(a,null,{default:o(()=>[f]),_:1})]),_:1}),q])}const A=l(_,[["render",b]]);export{v as __pageData,A as default};

import{q as i}from"./chunks/theme.W1bS7NXL.js";import{e as h,c as m,j as t,w as e,af as p,b as d,N as l,$ as s,o as _,s as u}from"./chunks/framework.Dl8nlkpL.js";const b=p('<h1 id="mdinput" tabindex="-1">MdInput <a class="header-anchor" href="#mdinput" aria-label="Permalink to &quot;MdInput&quot;">​</a></h1><p><code>Material Design</code> 风格的输入框; <code>Material Design</code> 是由 <code>Google</code> 设计的视觉语言。</p><blockquote><p>组件使用名称为: <code>nt-md-input</code></p></blockquote><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>传递 <code>v-model</code> 接收输入。</p>',6),f=d("textarea",{lang:"vue"},`
  <script setup lang="ts">
    import { ref, watch } from 'vue'
    //-
    const value = ref('')
  <\/script>
  <template>
    <nt-md-input v-model="value" label="姓名"></nt-md-input>
  </template>
  `,-1),v=d("h3",{id:"四周边框",tabindex:"-1"},[l("四周边框 "),d("a",{class:"header-anchor",href:"#四周边框","aria-label":'Permalink to "四周边框"'},"​")],-1),x=d("p",null,[l("只需要传递 "),d("code",null,"outline"),l(" 属性，就能让输入框带有边框。")],-1),P=d("textarea",{lang:"vue-html"},`
  <nt-md-input v-model="value" label="姓名" outline></nt-md-input>
  `,-1),q=p('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="mdinput-props" tabindex="-1">MdInput Props <a class="header-anchor" href="#mdinput-props" aria-label="Permalink to &quot;MdInput Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>outline</code></td><td>是否显示四周边框</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>id</code></td><td>输入框的 id</td><td><code>string</code></td><td>-</td></tr><tr><td><code>label</code></td><td>输入框的标签</td><td><code>string</code></td><td>-</td></tr><tr><td><code>placeholder</code></td><td>输入框的占位提示</td><td><code>string</code></td><td>-</td></tr><tr><td><code>name</code></td><td>输入框的 name</td><td><code>string</code></td><td>-</td></tr><tr><td><code>html-type</code></td><td>对应输入框的原生属性 <code>type</code></td><td><code>string</code></td><td><code>text</code></td></tr><tr><td><code>v-model</code></td><td>双向绑定的值</td><td><code>string | number</code></td><td>-</td></tr></tbody></table><h3 id="mdinput-expose" tabindex="-1">MdInput Expose <a class="header-anchor" href="#mdinput-expose" aria-label="Permalink to &quot;MdInput Expose&quot;">​</a></h3><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td><code>focus</code></td><td>聚焦输入框</td><td>-</td><td>-</td></tr></tbody></table>',5),C=JSON.parse('{"title":"MdInput","description":"","frontmatter":{},"headers":[],"relativePath":"components/mdinput.md","filePath":"components/mdinput.md","lastUpdated":1723713702000}'),g={name:"components/mdinput.md"},M=Object.assign(g,{setup(V){const o=h("");return(I,a)=>{const r=s("CodePreview"),c=s("ClientOnly");return _(),m("div",null,[b,t(c,null,{default:e(()=>[t(r,null,{preview:e(()=>[t(u(i),{modelValue:o.value,"onUpdate:modelValue":a[0]||(a[0]=n=>o.value=n),label:"姓名"},null,8,["modelValue"])]),default:e(()=>[f]),_:1})]),_:1}),v,x,t(c,null,{default:e(()=>[t(r,null,{preview:e(()=>[t(u(i),{modelValue:o.value,"onUpdate:modelValue":a[1]||(a[1]=n=>o.value=n),label:"姓名",outline:""},null,8,["modelValue"])]),default:e(()=>[P]),_:1})]),_:1}),q])}}});export{C as __pageData,M as default};

import{H as r}from"./chunks/theme.DS74rj3R.js";import{f as m,c as x,ag as v,l as d,w as a,b as e,R as n,a1 as f,o as g,u as l}from"./chunks/framework.DcK8S9T6.js";const k=JSON.parse('{"title":"Select 选择器","description":"","frontmatter":{},"headers":[],"relativePath":"components/select.md","filePath":"components/select.md","lastUpdated":1731247284000}'),V={name:"components/select.md"},S=Object.assign(V,{setup(y){const s=["苹果","香蕉","橙子","葡萄","柠檬","草莓","樱桃","芒果","猕猴桃","杨梅","菠萝","西瓜","哈密瓜","桃子","梨","柿子","榴莲","椰子","龙眼","荔枝"].slice(0,10).map((h,t)=>({value:t,label:h})),i=m(""),b=m([]),c=m([]);return(h,t)=>{const p=f("CodePreview"),u=f("ClientOnly");return g(),x("div",null,[t[8]||(t[8]=v('<h1 id="select-选择器" tabindex="-1">Select 选择器 <a class="header-anchor" href="#select-选择器" aria-label="Permalink to &quot;Select 选择器&quot;">​</a></h1><p>下拉选择器</p><ul><li>弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器</li><li>当选项过多时，使用下拉菜单展示并选择内容</li></ul><blockquote><p><code>nt-select</code> 的默认宽度更改为 <code>100%</code> 当使用内联形式时，宽度将显示异常。为了保持显示正常, 您需要手动配置 <code>nt-select</code> 的宽度</p></blockquote><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>基础用法</p>',7)),d(u,null,{default:a(()=>[d(p,null,{preview:a(()=>[d(l(r),{options:l(s),modelValue:i.value,"onUpdate:modelValue":t[0]||(t[0]=o=>i.value=o),style:{width:"180px"}},null,8,["options","modelValue"])]),default:a(()=>[t[5]||(t[5]=e("textarea",{lang:"vue"},`  <script setup lang="ts">
    const fruits = ["苹果", "香蕉", "橙子", "葡萄", "柠檬", "草莓", "樱桃", "芒果", "猕猴桃", "杨梅", "菠萝", "西瓜", "哈密瓜", "桃子", "梨", "柿子", "榴莲", "椰子", "龙眼", "荔枝"];
    //-
    const options = fruits.slice(0, 10).map((item, i) => { return { value: i, label: item } });
    //-
    const value = ref('');
  <\/script>
  <template>
    <nt-select :options="options" v-model="value" style="width:180px;"></nt-select>
  </template>
  `,-1))]),_:1})]),_:1}),t[9]||(t[9]=e("h3",{id:"多选",tabindex:"-1"},[n("多选 "),e("a",{class:"header-anchor",href:"#多选","aria-label":'Permalink to "多选"'},"​")],-1)),t[10]||(t[10]=e("p",null,[n("设置 "),e("code",null,"multiple"),n(" 属性即可启用多选， 此时 "),e("code",null,"v-model"),n(" 的值为当前选中值所组成的数组。默认情况下选中值会以 "),e("a",{href:"/neatui-vue/components/tag",target:"_blank"},"Tag"),n(" 组件的形式展现， 你也可以设置 "),e("code",null,"collapse-tags"),n(" 属性将它们合并为一段文字。")],-1)),d(u,null,{default:a(()=>[d(p,null,{preview:a(()=>[d(l(r),{options:l(s),modelValue:b.value,"onUpdate:modelValue":t[1]||(t[1]=o=>b.value=o),multiple:"",style:{width:"180px"}},null,8,["options","modelValue"]),d(l(r),{options:l(s),modelValue:c.value,"onUpdate:modelValue":t[2]||(t[2]=o=>c.value=o),multiple:"",style:{width:"180px"},class:"ml-10","collapse-tags":""},null,8,["options","modelValue"])]),default:a(()=>[t[6]||(t[6]=e("textarea",{lang:"vue"},`  <template>
    <nt-select :options="options" v-model="value1" multiple style="width:180px;"></nt-select>
    <nt-select
      :options="options"
      v-model="value2"
      multiple
      style="width:180px;"
      class="ml-10"
      collapse-tags
    ></nt-select>
  </template>
  `,-1))]),_:1})]),_:1}),t[11]||(t[11]=e("h3",{id:"可清空",tabindex:"-1"},[n("可清空 "),e("a",{class:"header-anchor",href:"#可清空","aria-label":'Permalink to "可清空"'},"​")],-1)),t[12]||(t[12]=e("p",null,[n("设置 "),e("code",null,"clearable"),n(" 属性，则可将选择器清空。使用清除图标来清除选择。")],-1)),d(u,null,{default:a(()=>[d(p,null,{preview:a(()=>[d(l(r),{options:l(s),modelValue:i.value,"onUpdate:modelValue":t[3]||(t[3]=o=>i.value=o),style:{width:"180px"},clearable:""},null,8,["options","modelValue"]),d(l(r),{options:l(s),modelValue:c.value,"onUpdate:modelValue":t[4]||(t[4]=o=>c.value=o),multiple:"",style:{width:"180px"},class:"ml-10","collapse-tags":"",clearable:""},null,8,["options","modelValue"])]),default:a(()=>[t[7]||(t[7]=e("textarea",{lang:"vue"},`  <script setup>
  <\/script>
  <template>
  </template>
  `,-1))]),_:1})]),_:1}),t[13]||(t[13]=v('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="select-props" tabindex="-1">Select Props <a class="header-anchor" href="#select-props" aria-label="Permalink to &quot;Select Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>model-value / v-model</code></td><td>选中项绑定值</td><td><code>string、number、array</code></td><td>-</td></tr><tr><td><code>placeholder</code></td><td>占位符</td><td><code>string</code></td><td>请选择</td></tr><tr><td><code>disabled</code></td><td>是否禁用</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>label-field</code></td><td>选项 <code>label</code> 的字段名</td><td><code>string</code></td><td><code>label</code></td></tr><tr><td><code>value-field</code></td><td>选项 <code>value</code> 的字段名</td><td><code>string</code></td><td><code>value</code></td></tr><tr><td><code>options</code></td><td>配置选项内容</td><td><code>SelectOption[]</code></td><td>-</td></tr><tr><td><code>multiple</code></td><td>是否多选</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>collapse-tags</code></td><td>多选时是否将选中值按文字的形式展示</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>clearable</code></td><td>是否可清空</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table><h3 id="selectoption-property" tabindex="-1">SelectOption Property <a class="header-anchor" href="#selectoption-property" aria-label="Permalink to &quot;SelectOption Property&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>label</code></td><td>选项标签</td><td><code>string</code></td><td>-</td></tr><tr><td><code>value</code></td><td>选项值</td><td><code>string、number</code></td><td>-</td></tr><tr><td><code>class</code></td><td>自定义一个选项的类名</td><td><code>string</code></td><td>-</td></tr><tr><td><code>render</code></td><td>渲染整个选项</td><td><code>(option: SelectOption, isSelect: boolean, selectedValues?: any | any[]) =&gt; VNode[] | VNode</code></td><td>-</td></tr></tbody></table>',5))])}}});export{k as __pageData,S as default};

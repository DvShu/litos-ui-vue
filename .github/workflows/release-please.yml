on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        name: release
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: node

      - name: Print Release Output
        run: |
          echo "Release output origin: ${{ steps.release.outputs }}"
          echo "Release output: ${{ toJson(steps.release.outputs) }}"

  joblog:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Print Previous Job Output
        run: |
          echo "Previous job output: "
          echo "${{ toJson(needs.release.outputs) }}"

  publish:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Pnpm
        uses: pnpm/action-setup@v3

      - name: Install Dependencies
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: pnpm install

      - name: Build Lib
        run: pnpm lib:build

      - run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
